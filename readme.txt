-------------------НЕЙРО КОНТРОЛЬ КАЧЕСТВА---------------------


Тема проекта
"Нейро Контроль Качества звонков"

Описание проекта
"Нейро Контроль Качества" — это система анализа качества работы операторов, менеджеров по продажам и всех тех, кто ведет коммуникацию с клиентами посредством общения через звонки. Основанная на технологиях искусственного интеллекта и обработки естественного языка (NLP). Платформа помогает РОПам автоматизировать процесс оценки взаимодействия операторов с клиентами, предоставляя комплексный анализ поведения и речи оператора.

Функциональность
1.	Регистрация и авторизация пользователей:
Пользователь регистрируется в системе, данные сохраняются в базе данных PostgreSQL.
2.	Загрузка аудиофайлов:
Зарегистрированный пользователь может загружать аудиофайлы для анализа.
3.	Выбор критериев оценки:
Система предоставляет 10 критериев для оценки взаимодействия:
o	Задавал ли открытые вопросы.
o	Работал ли с возражениями.
o	Придерживался ли скрипта.
o	Был ли вежлив.
o	Обращался ли по имени к клиенту.
o	Приводил ли аргументы в пользу сотрудничества.
o	Аргументировал ли свои ответы.
o	Ответил ли на все вопросы клиента.
o	Работал ли с возражениями клиента.
o	Определение категории звонка.
4.	Обработка аудио:
По нажатию кнопки запускается анализ аудиофайла:
o	Транскрибация: преобразование аудиофайла в текст.
o	Диаризация: выделение речевых сегментов клиента и оператора.
o	VAC-анализ: декорированный класс обрабатывает транскрипцию, анализируя эмоции, интонацию и стиль речи клиента.
o	Анализ разговора: выделение метапрограмм и радикалов клиента для определения его поведенческих особенностей.
o	Анализ возражений: по системе PMHS (Проблема → Мотивация → Решение → Сделка) система формирует рекомендации по работе с клиентом.
5.	Результаты анализа:
Пользователь получает детализированный отчет по выбранным критериям, включая рекомендации по улучшению качества взаимодействия.



               +----------------------+
               |    Пользователь      |
               +----------+-----------+
                          |
          Регистрация/Авторизация (PostgreSQL)
                          |
               +----------v-----------+
               |  Загрузка аудиофайла |
               +----------+-----------+
                          |
          Выбор критериев оценки (10 параметров)
                          |
               +----------v-----------+
               |   Начало обработки   |
               +----------+-----------+
                          |
            +-------------+-------------+
            |                           |
    Транскрибация                 Диаризация
            |                           |
       VAC-анализ            Слова клиента выделены
            |                           |
       Анализ конверсии   <-- Переменные переданы
            |                           |
       +----v----+        +-------------+
       | Анализ  |        | Определение |
       | возражений (PMHS)| категории   |
       +----+----+        +-------------+
            |
       +----v-----------------+
       |    Генерация анализа в виде таблиц  |
       +-----------------------+


Основные технологии
•	Back-End: Python (FastAPI), PostgreSQL, OpenAI API.
•	Front-End: HTML5, CSS3, JavaScript (для удобного взаимодействия пользователя).


Евгений Холмогоров 
Python back end developer 
bykholmogorov@gmail.com



RUN: 
     1. git clone <URL_репозитория>
          cd <название_проекта>

     2. python -m venv venv

     3. For Windows - venv\Scripts\activate

     4. For MacOS - source venv/bin/activate

     5. pip install -r requirements.txt

     6. Создайте файл .env и запишите свои секретные данные: 
          Пример: 
               OPENAI_API_KEY=Здесь ваш ключ без ковычек и прбелов (OPENAI_API_KEY=SK-kjhlkhjfksdjhgjskdhgksjdhgkjsdhg)
               DB_HOST=localhost
               DB_PORT=5432
               DB_USER=postgres
               DB_PASS=postgres
               DB_NAME=postgres


               SECRET_KEY=
               ALGORITHM=HS256
     7. Если необходимо сделайте миграции c back end на PostgreSQL
          alembic upgrade head  # Для Alembic

     8. uvicorn main:app --reload

     9. http://127.0.0.1:8000/docs - Swagger для теста end points. 